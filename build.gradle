import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

buildscript {
    ext {
        buildConfig = [
                'compileSdk'    : 31,
                'targetSdk'     : 30,
                'minSdk'        : 21,
                'buildTools'    : '30.0.3',
                'robolectricSdk': 30
        ]

        versions = [
                'kotlin'                       : '1.5.31',
                'kotlinCoroutines'             : '1.5.2',
                'androidxAppCompat'            : '1.3.1',
                'androidxActivity'             : '1.4.0',
                'androidxRecyclerView'         : '1.2.1',
                'androidxLifecycle'            : '2.4.0',
                'androidxAnnotation'           : '1.2.0',
                'androidxBiometric'            : '1.1.0',
                'androidxNavigation'           : '2.3.5',
                'androidxConstraintLayout'     : '2.1.1',
                'androidxWorkManager'          : '2.7.0',
                'androidxFragment'             : '1.3.6',
                'androidxLocalBroadcastManager': '1.0.0',
                'androidxCore'                 : '1.7.0',
                'androidxCardView'             : '1.0.0',
                'androidxPreference'           : '1.1.1',
                'androidxTestCore'             : '1.4.0',
                'materialComponents'           : '1.4.0',
                'fastAdapter'                  : '5.5.1',
                'preferencesFix'               : '1.1.0',
                'okio'                         : '2.10.0',
                'moshi'                        : '1.12.0',
                'timber'                       : '5.0.1',
                'koin'                         : '3.1.4',
                'commonsIo'                    : '2.11.0',
                'mime4j'                       : '0.8.6',
                'okhttp'                       : '4.9.2',
                'minidns'                      : '1.0.0',
                'glide'                        : '4.12.0',

                'androidxTestRunner'           : '1.4.0',
                'junit'                        : '4.13.2',
                'robolectric'                  : '4.6.1',
                'mockito'                      : '4.0.0',
                'mockitoKotlin'                : '4.0.0',
                'truth'                        : '1.1.3',

                'ktlint'                       : '0.40.0',
                'jacoco'                       : '0.8.7',
                'compose'                      : '1.0.5',
                'composeNavigation'            : '2.4.0-beta01',
                'mockk'                        : '1.12.1',
                'appAuth'                      : '0.10.0',
                'ktor'                         : '1.6.6',
                'logback'                      : '1.2.6',
                'browser'                      : '1.4.0',
                'dotsLoader'                   : '1.0.2'
        ]

        javaVersion = JavaVersion.VERSION_1_8
        kotlinJvmVersion = "1.8"
    }

    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:10.0.0"
        classpath "org.jacoco:org.jacoco.core:${versions.jacoco}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}"
    }
}

project.ext {
    googleClientId = propertyOrEmpty('gClientId')
    googleRedirectUrl = propertyOrEmpty('gRedirectUrl')
    googleRedirectScheme = propertyOrEmpty('gRedirectScheme')

    outlookClientId = propertyOrEmpty('oClientId')
    outlookRedirectUrl = propertyOrEmpty('oRedirectUrl')
    outlookRedirectScheme = propertyOrEmpty('oRedirectScheme')
    outlookHost = propertyOrEmpty('oHost')

    testCoverage = project.hasProperty('testCoverage')
}

def propertyOrEmpty(String propertyName) {
    if (project.hasProperty(propertyName)) return project.getProperty(propertyName) else return ''
}

subprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat "full"
            showCauses true
            showExceptions true
            showStackTraces true
        }
    }

    tasks.withType(KotlinCompile) {
        kotlinOptions {
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
        }
    }

    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    ktlint {
        version = versions.ktlint
    }

    configurations.all {
        resolutionStrategy {
            eachDependency { details ->
                if ('org.jacoco' == details.requested.group) {
                    details.useVersion versions.jacoco
                }
            }
        }
    }

    afterEvaluate { project ->
        if (rootProject.testCoverage &&
                project.hasProperty("android") &&
                new File("${project.projectDir}/src/test").exists()
        ) {
            project.apply from: "$rootDir/jacoco.gradle"
        }
    }
}

task clean(type: Delete) {
    delete(buildDir)
}
